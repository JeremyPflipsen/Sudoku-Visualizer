(this["webpackJsonpsudoku-visualizer"]=this["webpackJsonpsudoku-visualizer"]||[]).push([[0],[,,,,,,,,,,,,,,function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t.r(e);var r=t(0),o=t(1),a=t.n(o),i=t(8),s=t.n(i),c=(t(14),t(3)),l=t(4),u=t(2),h=t(6),d=t(5),f=(t(15),t(16),function(n){Object(h.a)(t,n);var e=Object(d.a)(t);function t(n){var r;return Object(c.a)(this,t),(r=e.call(this,n)).state={},r}return Object(l.a)(t,[{key:"render",value:function(){var n=this,e=this.props,t=e.col,o=e.row,a=e.isFinish,i=e.isStart,s=e.actualValue,c=a?"node-finish":i?"node-start":"";return Object(r.jsx)("input",{id:"node-".concat(o,"-").concat(t),value:s,type:"number",className:"node ".concat(c),placeholder:s,onInput:function(e){return n.props.inputValueChange(o,t,e)}})}}]),t}(o.Component)),b=(t(17),function(n){Object(h.a)(t,n);var e=Object(d.a)(t);function t(n){var r;return Object(c.a)(this,t),(r=e.call(this,n)).state={grid:[]},r}return Object(l.a)(t,[{key:"componentDidMount",value:function(){for(var n=[],e=0;e<9;e++){for(var t=[],r=0;r<9;r++){var o={col:r,row:e,isStart:!1,isFinish:!1};t.push(o)}n.push(t)}this.setState({grid:n})}},{key:"render",value:function(){var n=this,e=this.state.grid;return Object(r.jsx)(r.Fragment,{children:Object(r.jsx)("div",{className:"grid",children:e.map((function(e,t){return Object(r.jsx)("div",{children:e.map((function(e,t){var o=e.col,a=e.row,i=e.isStart,s=e.isFinish;return Object(r.jsx)(f,{col:o,row:a,isStart:i,isFinish:s,actualValue:n.props.grid[a][o],inputValueChange:n.props.inputValueChange},t)}))},t)}))})})}}]),t}(o.Component));t(18);function m(n,e){switch(e){case 1:document.getElementById("button").innerHTML="Visualize Backtracking",n.selectAlg(1);break;case 2:document.getElementById("button").innerHTML="Visualize Hill Climbing",n.selectAlg(2);break;case 3:document.getElementById("button").innerHTML="Visualize Simulated Annealing",n.selectAlg(3);break;case 4:document.getElementById("button").innerHTML="Visualize Genetic Algorithm",n.selectAlg(4);break;default:console.log("You selected an algorithm!")}}function j(n){return Object(r.jsx)("nav",{class:"menu",children:Object(r.jsxs)("ol",{children:[Object(r.jsxs)("li",{class:"menu-item",children:[Object(r.jsx)("a",{href:"#0",children:"Algorithm"}),Object(r.jsxs)("ol",{class:"sub-menu",children:[Object(r.jsx)("li",{class:"menu-item",onClick:function(){return m(n,1)},children:Object(r.jsx)("a",{href:"#0",children:"Backtracking"})}),Object(r.jsx)("li",{class:"menu-item",onClick:function(){return m(n,2)},children:Object(r.jsx)("a",{href:"#0",children:"Hill Climbing"})}),Object(r.jsx)("li",{class:"menu-item",onClick:function(){return m(n,3)},children:Object(r.jsx)("a",{href:"#0",children:"Simulated Annealing"})}),Object(r.jsx)("li",{class:"menu-item",onClick:function(){return m(n,4)},children:Object(r.jsx)("a",{href:"#0",children:"Genetic Algorithm"})})]})]}),Object(r.jsx)("button",{id:"button",onClick:n.handleClick,href:"#",className:"myButton",children:"Visualize Algorithm"}),Object(r.jsxs)("li",{class:"menu-item",children:[Object(r.jsx)("a",{href:"#0",children:"Load Grid"}),Object(r.jsxs)("ol",{class:"sub-menu",children:[Object(r.jsx)("li",{class:"menu-item",onClick:n.loadSGrid,children:Object(r.jsx)("a",{href:"#0",children:"Grid with Solution"})}),Object(r.jsx)("li",{class:"menu-item",onClick:n.loadRGrid,children:Object(r.jsx)("a",{href:"#0",children:"Load Random Grid"})})]})]})]})})}function v(n,e){return document.getElementById("node-".concat(n,"-").concat(e))}function g(n){for(var e=0;e<9;e++)for(var t=0;t<9;t++)v(e,t).value=n[e][t],v(e,t).className="node"}function p(){for(var n,e=[[0,5,1,3,6,2,7,0,0],[0,4,0,0,5,8,0,0,0],[0,0,0,4,0,0,0,2,5],[0,8,0,0,0,0,9,0,3],[0,0,0,0,0,0,0,0,0],[7,0,5,0,0,0,0,8,0],[1,2,0,0,0,9,0,0,0],[0,0,0,2,8,0,0,6,0],[0,0,8,5,3,4,2,9,0]],t=(n=50,Math.floor(Math.random()*Math.floor(n))+1),r=0;r<9;r++)for(var o=0;o<9;o++)e[r][o]=Number("\n    Grid 01\n    003020600\n    900305001\n    001806400\n    008102900\n    700000008\n    006708200\n    002609500\n    800203009\n    005010300\n    Grid 02\n    200080300\n    060070084\n    030500209\n    000105408\n    000000000\n    402706000\n    301007040\n    720040060\n    004010003\n    Grid 03\n    000000907\n    000420180\n    000705026\n    100904000\n    050000040\n    000507009\n    920108000\n    034059000\n    507000000\n    Grid 04\n    030050040\n    008010500\n    460000012\n    070502080\n    000603000\n    040109030\n    250000098\n    001020600\n    080060020\n    Grid 05\n    020810740\n    700003100\n    090002805\n    009040087\n    400208003\n    160030200\n    302700060\n    005600008\n    076051090\n    Grid 06\n    100920000\n    524010000\n    000000070\n    050008102\n    000000000\n    402700090\n    060000000\n    000030945\n    000071006\n    Grid 07\n    043080250\n    600000000\n    000001094\n    900004070\n    000608000\n    010200003\n    820500000\n    000000005\n    034090710\n    Grid 08\n    480006902\n    002008001\n    900370060\n    840010200\n    003704100\n    001060049\n    020085007\n    700900600\n    609200018\n    Grid 09\n    000900002\n    050123400\n    030000160\n    908000000\n    070000090\n    000000205\n    091000050\n    007439020\n    400007000\n    Grid 10\n    001900003\n    900700160\n    030005007\n    050000009\n    004302600\n    200000070\n    600100030\n    042007006\n    500006800\n    Grid 11\n    000125400\n    008400000\n    420800000\n    030000095\n    060902010\n    510000060\n    000003049\n    000007200\n    001298000\n    Grid 12\n    062340750\n    100005600\n    570000040\n    000094800\n    400000006\n    005830000\n    030000091\n    006400007\n    059083260\n    Grid 13\n    300000000\n    005009000\n    200504000\n    020000700\n    160000058\n    704310600\n    000890100\n    000067080\n    000005437\n    Grid 14\n    630000000\n    000500008\n    005674000\n    000020000\n    003401020\n    000000345\n    000007004\n    080300902\n    947100080\n    Grid 15\n    000020040\n    008035000\n    000070602\n    031046970\n    200000000\n    000501203\n    049000730\n    000000010\n    800004000\n    Grid 16\n    361025900\n    080960010\n    400000057\n    008000471\n    000603000\n    259000800\n    740000005\n    020018060\n    005470329\n    Grid 17\n    050807020\n    600010090\n    702540006\n    070020301\n    504000908\n    103080070\n    900076205\n    060090003\n    080103040\n    Grid 18\n    080005000\n    000003457\n    000070809\n    060400903\n    007010500\n    408007020\n    901020000\n    842300000\n    000100080\n    Grid 19\n    003502900\n    000040000\n    106000305\n    900251008\n    070408030\n    800763001\n    308000104\n    000020000\n    005104800\n    Grid 20\n    000000000\n    009805100\n    051907420\n    290401065\n    000000000\n    140508093\n    026709580\n    005103600\n    000000000\n    Grid 21\n    020030090\n    000907000\n    900208005\n    004806500\n    607000208\n    003102900\n    800605007\n    000309000\n    030020050\n    Grid 22\n    005000006\n    070009020\n    000500107\n    804150000\n    000803000\n    000092805\n    907006000\n    030400010\n    200000600\n    Grid 23\n    040000050\n    001943600\n    009000300\n    600050002\n    103000506\n    800020007\n    005000200\n    002436700\n    030000040\n    Grid 24\n    004000000\n    000030002\n    390700080\n    400009001\n    209801307\n    600200008\n    010008053\n    900040000\n    000000800\n    Grid 25\n    360020089\n    000361000\n    000000000\n    803000602\n    400603007\n    607000108\n    000000000\n    000418000\n    970030014\n    Grid 26\n    500400060\n    009000800\n    640020000\n    000001008\n    208000501\n    700500000\n    000090084\n    003000600\n    060003002\n    Grid 27\n    007256400\n    400000005\n    010030060\n    000508000\n    008060200\n    000107000\n    030070090\n    200000004\n    006312700\n    Grid 28\n    000000000\n    079050180\n    800000007\n    007306800\n    450708096\n    003502700\n    700000005\n    016030420\n    000000000\n    Grid 29\n    030000080\n    009000500\n    007509200\n    700105008\n    020090030\n    900402001\n    004207100\n    002000800\n    070000090\n    Grid 30\n    200170603\n    050000100\n    000006079\n    000040700\n    000801000\n    009050000\n    310400000\n    005000060\n    906037002\n    Grid 31\n    000000080\n    800701040\n    040020030\n    374000900\n    000030000\n    005000321\n    010060050\n    050802006\n    080000000\n    Grid 32\n    000000085\n    000210009\n    960080100\n    500800016\n    000000000\n    890006007\n    009070052\n    300054000\n    480000000\n    Grid 33\n    608070502\n    050608070\n    002000300\n    500090006\n    040302050\n    800050003\n    005000200\n    010704090\n    409060701\n    Grid 34\n    050010040\n    107000602\n    000905000\n    208030501\n    040070020\n    901080406\n    000401000\n    304000709\n    020060010\n    Grid 35\n    053000790\n    009753400\n    100000002\n    090080010\n    000907000\n    080030070\n    500000003\n    007641200\n    061000940\n    Grid 36\n    006080300\n    049070250\n    000405000\n    600317004\n    007000800\n    100826009\n    000702000\n    075040190\n    003090600\n    Grid 37\n    005080700\n    700204005\n    320000084\n    060105040\n    008000500\n    070803010\n    450000091\n    600508007\n    003010600\n    Grid 38\n    000900800\n    128006400\n    070800060\n    800430007\n    500000009\n    600079008\n    090004010\n    003600284\n    001007000\n    Grid 39\n    000080000\n    270000054\n    095000810\n    009806400\n    020403060\n    006905100\n    017000620\n    460000038\n    000090000\n    Grid 40\n    000602000\n    400050001\n    085010620\n    038206710\n    000000000\n    019407350\n    026040530\n    900020007\n    000809000\n    Grid 41\n    000900002\n    050123400\n    030000160\n    908000000\n    070000090\n    000000205\n    091000050\n    007439020\n    400007000\n    Grid 42\n    380000000\n    000400785\n    009020300\n    060090000\n    800302009\n    000040070\n    001070500\n    495006000\n    000000092\n    Grid 43\n    000158000\n    002060800\n    030000040\n    027030510\n    000000000\n    046080790\n    050000080\n    004070100\n    000325000\n    Grid 44\n    010500200\n    900001000\n    002008030\n    500030007\n    008000500\n    600080004\n    040100700\n    000700006\n    003004050\n    Grid 45\n    080000040\n    000469000\n    400000007\n    005904600\n    070608030\n    008502100\n    900000005\n    000781000\n    060000010\n    Grid 46\n    904200007\n    010000000\n    000706500\n    000800090\n    020904060\n    040002000\n    001607000\n    000000030\n    300005702\n    Grid 47\n    000700800\n    006000031\n    040002000\n    024070000\n    010030080\n    000060290\n    000800070\n    860000500\n    002006000\n    Grid 48\n    001007090\n    590080001\n    030000080\n    000005800\n    050060020\n    004100000\n    080000030\n    100020079\n    020700400\n    Grid 49\n    000003017\n    015009008\n    060000000\n    100007000\n    009000200\n    000500004\n    000000020\n    500600340\n    340200000\n    Grid 50\n    300200000\n    000107000\n    706030500\n    070009080\n    900020004\n    010800050\n    009040301\n    000702000\n    000008006\n    ".charAt(17+138*(t-1)+9*r+5*r+o));return e}function O(n){return Math.floor(Math.random()*Math.floor(n))}function x(n,e,t,r){return!!(function(n,e,t){for(var r=0;r<9;r++)if(n[e][r]===t)return!1;return!0}(n,e,r)&&function(n,e,t){for(var r=0;r<9;r++)if(n[r][e]===t)return!1;return!0}(n,t,r)&&function(n,e,t,r){for(var o=3*Math.floor(e/3),a=3*Math.floor(t/3),i=0;i<3;i++)for(var s=0;s<3;s++)if(n[o+i][a+s]===r)return!1;return!0}(n,e,t,r))}function w(){for(var n=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],e=0;e<9;e++)for(var t=0;t<9;t++)if(Math.random()>.7){for(var r=O(9)+1,o=0,a=x(n,e,t,r);!a&&o<50;)a=x(n,e,t,r=O(8)+1),o++;n[e][t]=r}return n}t(19);var G=function(n){Object(h.a)(t,n);var e=Object(d.a)(t);function t(n){var r;return Object(c.a)(this,t),(r=e.call(this,n)).state={},r.chooseAbout=r.chooseAbout.bind(Object(u.a)(r)),r}return Object(l.a)(t,[{key:"chooseAbout",value:function(n){switch(n){case 1:return Object(r.jsxs)("div",{children:["Backtracking is essentially structured guessing until you find a solution that works.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 1: Choose 1x1 Square",Object(r.jsx)("br",{}),"Here we choose the top-left-most 1x1 square whose value is 0.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 2: Choose Number",Object(r.jsx)("br",{}),"A conflict is when a the number in a 1x1 square already appears in the same row, column, or 3x3 square. Choose the lowest number 1-9 that doesn't cause a conflict and put it in the current chosen square. If all of the numbers 1-9 cause conflicts in the current square then go to step 3. Otherwise skip step 3 and go to step 4.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 3: Backtrack",Object(r.jsx)("br",{}),"Back up to the previous chosen square. Chose the lowest number that is greater than what was previously in that square. So if the previous chosen square had a 4, now start checking the numbers 5-9. If these all cause conflicts, then repeat step 3 again.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 4: Repeat",Object(r.jsx)("br",{}),"Start again at step 1 until you've filled in all the squares. If there is no solution then reset all the squares back to 0."]});case 2:return Object(r.jsxs)("div",{children:["Hill Climbing is an example of a greedy algorithm, meaning that at each step in the algorithm, it chooses the option that maximizes its short-term gain to the next step.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 1: Initialize",Object(r.jsx)("br",{}),"Fill all of the 3x3 squares with the numbers 1-9  in a random arrangement so that there are no duplicates in the 3x3 squares. There will be conflicts in the rows and columns.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 2: Count Error",Object(r.jsx)("br",{}),"For each conflict in the grid, increase the total Error.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 3: Switch Squares",Object(r.jsx)("br",{}),"Choose two random 1x1 squares in the same 3x3 square. If switching their numbers lowers the total Error in the grid, then make the switch. Otherwise do not.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 4: Repeat",Object(r.jsx)("br",{}),"Repeat steps 2 and 3 a lot of times or until the error becomes 0.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),'This implementation looks at around 50000 moves, but quickly reaches a point where there aren\'t any moves that will lower the error, even though the grid is not solved. This is called a "local minimum" in the error, but it is not the "absolute minimum" of 0 error that we want. To get unstuck from this local minimum, we need to allow the error to increase sometimes, like in Simulated Annealing.']});case 3:return Object(r.jsxs)("div",{children:["Simulated Annealing is based on how molten metals cool into solid form.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 1: Initialize",Object(r.jsx)("br",{}),"Fill all of the 3x3 squares with the numbers 1-9  in a random arrangement so that there are no duplicates in the 3x3 squares. There will be conflicts in the rows and columns.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 2: Count Error",Object(r.jsx)("br",{}),"For each conflict in the grid, increase the total Error.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 3: Switch Squares",Object(r.jsx)("br",{}),"Choose two random 1x1 squares in the same 3x3 square. If switching their numbers lowers the total Error in the grid, then make the switch. If swithing their numbers increases the total Error, then there is a chance to make the switch. At the beginning this chance is around 80% but it drops over time to around 0% at the end.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 4: Repeat",Object(r.jsx)("br",{}),"Repeat steps 2 and 3 a lot of times or until the error becomes 0.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),'Simulated Annealing is much like Hill Climbing, but it allows the board to change a lot more at the beginning and "cool" into a solution with less errors. This helps the algorithm break out of local minima in the error that Hill Climbing gets stuck at. If you run both of these a few times, you\'ll see that Hill Climbing usually ends with around 10 errors, but Simulated Annealing usually ends with 2 or 3, which is much better.']});case 4:return Object(r.jsxs)("div",{children:["The genetic algorithm replicates natural selection in organisms.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 1: Initialize",Object(r.jsx)("br",{}),"Duplicate the initial board 1000 times and randomly set the 0s to be any number 1-9. This is our initial population.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 2: Reproduction",Object(r.jsx)("br",{}),'Choose two "parent" boards from the current population. Boards with lower errors get chosen to be parents more often. This reflects natural selection choosing more fit individuals to reproduce more. Create a new "child" board by randomly mixing the values of the two parents. This new board becomes a member of the child population. Make 1000 children in this way.',Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 3: Mutation",Object(r.jsx)("br",{}),"In each child, there is a small chance that any of its values will randomly change to a different value. This reflects gene mutation in organisms.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"Step 4: Repeat",Object(r.jsx)("br",{}),"The child population becomes the new parent population. Then repeat Steps 2 and 3. In our implementation we make 1000 generations.",Object(r.jsx)("br",{}),Object(r.jsx)("br",{}),"While there are 1000 boards in each generation, I am only showing you one board per generation."]});default:return"Choose an algorithm!"}}},{key:"render",value:function(){return Object(r.jsx)("span",{className:"About",children:this.chooseAbout(this.props.selectedAlg)})}}]),t}(o.Component);function S(n){switch(n){case n:this.setState({selectedAlg:n});break;default:console.log("You selected an algorithm!")}}function k(n,e,t,r){return!!(function(n,e,t){for(var r=0;r<9;r++)if(n[e][r]===t)return!1;return!0}(n,e,r)&&function(n,e,t){for(var r=0;r<9;r++)if(n[r][e]===t)return!1;return!0}(n,t,r)&&function(n,e,t,r){for(var o=3*Math.floor(e/3),a=3*Math.floor(t/3),i=0;i<3;i++)for(var s=0;s<3;s++)if(n[o+i][a+s]===r)return!1;return!0}(n,e,t,r))}function y(n){for(var e=0;e<9;e++)for(var t=0;t<9;t++)if(0===n[e][t]||"0"===n[e][t])return[e,t];return[-1,-1]}function M(n,e){var t=y(n),r=t[0],o=t[1];if(-1!==r)for(var a=1;a<=9;a++)k(n,r,o,a)&&(n[r][o]=a,e.push([r,o,a]),M(n,e)),-1!==y(n)[0]&&(n[r][o]=0,e.push([r,o,0]))}function E(n){for(var e=[],t=0;t<9;t++)for(var r=0;r<9;r++)if(0!==n[t][r]&&"0"!==n[t][r]){var o=n[t][r];if(n[t][r]=0,!k(n,t,r,o))return{moves:[],solvable:!1};n[t][r]=o}return M(n,e),{moves:e,solvable:!0}}function N(n,e){return document.getElementById("node-".concat(n,"-").concat(e))}function A(n,e){return document.getElementById("node-".concat(n,"-").concat(e))}function C(n,e){for(var t=0;t<n.length;t++)for(var r=0;r<n.length;r++)n[r]===e&&n.splice(r,1)}function T(n){for(var e=[1,2,3,4,5,6,7,8,9],t=0,r=0,o=0;o<9;o++){for(var a=t;a<3+t;a++)for(var i=r;i<3+r;i++)0!==n[a][i]&&(e[n[a][i]-1]=0);C(e,0),e.sort((function(){return Math.random()-.5}));for(var s=t;s<3+t;s++)for(var c=r;c<3+r;c++)0===n[s][c]&&(n[s][c]=e.pop());e=[1,2,3,4,5,6,7,8,9],6!==r?r+=3:(r=0,t+=3)}!function(n){for(var e=0;e<9;e++)for(var t=0;t<9;t++)A(e,t).value=n[e][t]}(n)}function I(n){for(var e=0,t=[],r=0;r<9;r++){for(var o=0;o<9;o++)t.includes(n[r][o])?e+=1:t.push(n[r][o]);t=[]}for(var a=0;a<9;a++){for(var i=0;i<9;i++)t.includes(n[i][a])?e+=1:t.push(n[i][a]);t=[]}return e}function q(n){return Math.floor(Math.random()*Math.floor(n))}function B(n,e,t,r,o,a,i){return n[t][o]?e===t&&r===o?B(n,e,q(3)+a,r,q(3)+i,a,i):(console.log(e,t,r,o),{row2:t,col2:o}):B(n,e,q(3)+a,r,q(3)+i,a,i)}function L(n,e,t,r,o){for(var a=3*q(3),i=3*q(3),s=0;s<o.length;s++)for(;a===o[s][0]&&i===o[s][1];)a=3*q(3),i=3*q(3);for(var c=q(3)+a,l=q(3)+i,u=q(3)+a,h=q(3)+i;!e[c][l];)c=q(3)+a,l=q(3)+i;var d=B(e,c,u,l,h,a,i);u=d.row2,h=d.col2;var f=I(n);if(0!==f){var b=n[u][h];n[u][h]=n[c][l],n[c][l]=b;var m=I(n);if(m<f)r.push([c,l,n[c][l],m],[u,h,n[u][h],m]);else Math.exp((f-m)/t)<Math.random(0,1)?(b=n[u][h],n[u][h]=n[c][l],n[c][l]=b,r.push([c,l,n[c][l],f],[u,h,n[u][h],f])):r.push([c,l,n[c][l],m],[u,h,n[u][h],m])}}function V(n){for(var e=[],t=0;t<9;t++){for(var r=[],o=0;o<9;o++)0===n[t][o]||"0"===n[t][o]?r.push(!0):r.push(!1);e.push(r)}var a=[];return function(n,e,t){var r=function(n){for(var e=0,t=[],r=0,o=0,a=0;a<9;a++){for(var i=r;i<3+r;i++)for(var s=o;s<3+o;s++)n[i][s]||e++;e>=8&&t.push([r,o]),e=0,6!==o?o+=3:(o=0,r+=3)}return t}(t);if(9!==r.length){T(n);for(var o=10;o>.1;o*=.9999)L(n,t,o,e,r)}else document.getElementById("Error").innerHTML="Trivial solution detected."}(n,a,e),a}function H(n,e){return document.getElementById("node-".concat(n,"-").concat(e))}function F(n,e){return Number(H(n,e).value)}function z(n,e){if(0!==n.length){setTimeout((function(){document.getElementById("Error").innerHTML="Error: ".concat(n[0][3])}),100*Math.log(Math.pow(0,5)));for(var t=function(e){setTimeout((function(){H(n[e][0],n[e][1]).className="node-start",H(n[e+1][0],n[e+1][1]).className="node-start"}),1e3*Math.log(Math.pow(e,5))),setTimeout((function(){H(n[e][0],n[e][1]).value=n[e][2],H(n[e+1][0],n[e+1][1]).value=n[e+1][2],document.getElementById("Error").innerHTML="Error: ".concat(n[e][3]),H(n[e][0],n[e][1]).className="node",H(n[e+1][0],n[e+1][1]).className="node"}),1e3*Math.log(Math.pow(e+2,5)))},r=2;r<n.length;r+=2)t(r);!function(n){var e=[];setTimeout((function(){for(var n=0;n<9;n++){for(var t=0;t<9;t++)e.includes(F(n,t))?H(n,t).className="node-finish":e.push(F(n,t));e=[]}for(var r=0;r<9;r++){for(var o=0;o<9;o++)e.includes(F(o,r))?H(o,r).className="node-finish":e.push(F(o,r));e=[]}}),1e3*Math.log(Math.pow(n+2,5))+1e3)}(n.length)}}function R(n,e){return document.getElementById("node-".concat(n,"-").concat(e))}function W(n,e){for(var t=0;t<n.length;t++)for(var r=0;r<n.length;r++)n[r]===e&&n.splice(r,1)}function D(n){for(var e=[1,2,3,4,5,6,7,8,9],t=0,r=0,o=0;o<9;o++){for(var a=t;a<3+t;a++)for(var i=r;i<3+r;i++)0!==n[a][i]&&(e[n[a][i]-1]=0);W(e,0),e.sort((function(){return Math.random()-.5}));for(var s=t;s<3+t;s++)for(var c=r;c<3+r;c++)0===n[s][c]&&(n[s][c]=e.pop());e=[1,2,3,4,5,6,7,8,9],6!==r?r+=3:(r=0,t+=3)}!function(n){for(var e=0;e<9;e++)for(var t=0;t<9;t++)R(e,t).value=n[e][t]}(n)}function Y(n){for(var e=0,t=[],r=0;r<9;r++){for(var o=0;o<9;o++)t.includes(n[r][o])?e+=1:t.push(n[r][o]);t=[]}for(var a=0;a<9;a++){for(var i=0;i<9;i++)t.includes(n[i][a])?e+=1:t.push(n[i][a]);t=[]}return e}function J(n){return Math.floor(Math.random()*Math.floor(n))}function $(n,e,t,r,o,a,i){return n[t][o]?e===t&&r===o?$(n,e,J(3)+a,r,J(3)+i,a,i):(console.log(e,t,r,o),{row2:t,col2:o}):$(n,e,J(3)+a,r,J(3)+i,a,i)}function K(n,e,t,r,o){for(var a=3*J(3),i=3*J(3),s=0;s<o.length;s++)for(;a===o[s][0]&&i===o[s][1];)a=3*J(3),i=3*J(3);for(var c=J(3)+a,l=J(3)+i,u=J(3)+a,h=J(3)+i;!e[c][l];)c=J(3)+a,l=J(3)+i;var d=$(e,c,u,l,h,a,i);u=d.row2,h=d.col2;var f=Y(n);if(0!==f){var b=n[u][h];n[u][h]=n[c][l],n[c][l]=b;var m=Y(n);m<f?r.push([c,l,n[c][l],m],[u,h,n[u][h],m]):(b=n[u][h],n[u][h]=n[c][l],n[c][l]=b,r.push([c,l,n[c][l],f],[u,h,n[u][h],f]))}}function P(n){for(var e=[],t=0;t<9;t++){for(var r=[],o=0;o<9;o++)0===n[t][o]||"0"===n[t][o]?r.push(!0):r.push(!1);e.push(r)}var a=[];return function(n,e,t){var r=function(n){for(var e=0,t=[],r=0,o=0,a=0;a<9;a++){for(var i=r;i<3+r;i++)for(var s=o;s<3+o;s++)n[i][s]||e++;e>=8&&t.push([r,o]),e=0,6!==o?o+=3:(o=0,r+=3)}return t}(t);if(9!==r.length){D(n);for(var o=5;o>.1;o*=.9999)K(n,t,0,e,r)}else document.getElementById("Error").innerHTML="Trivial solution detected."}(n,a,e),a}function Q(n){return Math.floor(Math.random()*Math.floor(n))}function U(n,e){for(var t=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],r=0;r<9;r++)for(var o=0;o<9;o++)t[r][o]=n[r][o];for(var a=0;a<9;a++)for(var i=0;i<9;i++)e[a][i]&&(t[a][i]=Q(9)+1);return t}function X(n){for(var e=0,t=[],r=0,o=0,a=0;a<9;a++){for(var i=0;i<9;i++)t.includes(n[a][i])?e+=1:t.push(n[a][i]);t=[]}for(var s=0;s<9;s++){for(var c=0;c<9;c++)t.includes(n[c][s])?e+=1:t.push(n[c][s]);t=[]}for(var l=0;l<9;l++){for(var u=r;u<3+r;u++)for(var h=o;h<3+o;h++)t.includes(n[u][h])?e+=1:t.push(n[u][h]);6!==o?o+=3:(o=0,r+=3),t=[]}return e}function Z(n){for(var e=1/0,t=0;t<n.length;t++)n[t]<e&&(e=n[t]);return e}function _(n){for(var e=[],t=0;t<9;t++){for(var r=[],o=0;o<9;o++)0===n[t][o]||"0"===n[t][o]?r.push(!0):r.push(!1);e.push(r)}var a=[];return function(n,e,t){if(9!==function(n){for(var e=0,t=[],r=0,o=0,a=0;a<9;a++){for(var i=r;i<3+r;i++)for(var s=o;s<3+o;s++)n[i][s]||e++;e>=8&&t.push([r,o]),e=0,6!==o?o+=3:(o=0,r+=3)}return t}(t).length){for(var r=[],o=1e3,a=0;a<o;a++)r.push(U(n,t));for(var i=0;i<1e3;i++){for(var s=[],c=[],l=0;l<o;l++)s.push(216-X(r[l]));console.log(s[0]);for(var u=Z(s),h=0;h<s.length;h++)s[h]=s[h]-u+1;for(var d=0;d<o;d++)for(var f=0;f<s[d];f++)c.push(d),c.push(d),c.push(d);for(var b=[],m=-1,j=-1,v=0;v<o;v++){for(m=c[Q(c.length)],j=c[Q(c.length)];j===m;)j=c[Q(c.length)];for(var g=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],p=0;p<9;p++)for(var O=0;O<9;O++)t[p][O]?Math.random()>.5?g[p][O]=r[m][p][O]:g[p][O]=r[j][p][O]:g[p][O]=n[p][O];for(var x=0;x<9;x++)for(var w=0;w<9;w++)t[x][w]&&Math.random()<.01-1e-5*i&&(g[x][w]=Q(9)+1);b.push(g)}e.push(r[0]),r=b}}else document.getElementById("Error").innerHTML="Trivial solution detected."}(n,a,e),a}function nn(n,e){return document.getElementById("node-".concat(n,"-").concat(e))}function en(n,e){return Number(nn(n,e).value)}function tn(n){for(var e=0,t=function(t){setTimeout((function(){!function(n){for(var e=0;e<9;e++)for(var t=0;t<9;t++)nn(e,t).value=n[e][t]}(n[t]),function(){for(var n=0;n<9;n++)for(var e=0;e<9;e++)nn(n,e).className="node"}(),e=function(){for(var n=0,e=[],t=0,r=0,o=0;o<9;o++){for(var a=0;a<9;a++)e.includes(en(o,a))?(nn(o,a).className="node-finish",n++):e.push(en(o,a));e=[]}for(var i=0;i<9;i++){for(var s=0;s<9;s++)e.includes(en(s,i))?(nn(s,i).className="node-finish",n++):e.push(en(s,i));e=[]}for(var c=0;c<9;c++){for(var l=t;l<3+t;l++)for(var u=r;u<3+r;u++)e.includes(en(l,u))?(nn(l,u).className="node-finish",n++):e.push(en(l,u));6!==r?r+=3:(r=0,t+=3),e=[]}return n}(),document.getElementById("Error").innerHTML="Generation: ".concat(t+1," <br></br> Error: ").concat(e)}),5e3*Math.log(t+1))},r=0;r<n.length;r++)t(r)}function rn(n){var e=[];switch(this.state.selectedAlg){case 0:console.log("No algorithm selected!");break;case 1:var t=E(this.state.grid);(function(n,e){if(e){document.getElementById("Error").innerHTML="";for(var t=function(e){setTimeout((function(){N(n[e][0],n[e][1]).className="node-start"}),5e3*Math.pow(e,.25)-5e3),setTimeout((function(){N(n[e][0],n[e][1]).value=n[e][2],0===n[e][2]?N(n[e][0],n[e][1]).className="node":N(n[e][0],n[e][1]).className="node-finish"}),5e3*Math.pow(e+1,.25)-5e3)},r=0;r<n.length;r++)t(r);setTimeout((function(){for(var n=!0,e=0;e<9;e++)for(var t=0;t<9;t++)if(console.log(N(e,t).value),"0"===N(e,t).value){document.getElementById("Error").innerHTML="Grid does not have a solution :(",n=!1;break}n&&(document.getElementById("Error").innerHTML="Grid Solved. Boom.")}),5e3*Math.pow(n.length+1,.25)-5e3)}else document.getElementById("Error").innerHTML="Duplicate detected. Grid has no solution."})(e=t.moves,t.solvable);break;case 2:e=P(this.state.grid),setTimeout(z(e),1e3);break;case 3:e=V(this.state.grid),setTimeout(z(e),1e3);break;case 4:tn(e=_(this.state.grid));break;default:console.log("You selected an algorithm!")}}t(20),t(21);function on(n){switch(n.selectedAlg){case 1:return Object(r.jsxs)("div",{className:"Legend",children:[Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!1,isFinish:!1,actualValue:0})," "," = Empty Square"]}),Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!0,isFinish:!1})," "," = Current Square"]}),Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!1,isFinish:!0})," "," = Visited Square"]})]});case 2:case 3:return Object(r.jsxs)("div",{className:"Legend",children:[Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!1,isFinish:!1,actualValue:0})," "," = Empty Square"]}),Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!0,isFinish:!1})," "," = Current Square"]}),Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!1,isFinish:!0})," "," = Wrong Value Square"]})]});case 4:return Object(r.jsxs)("div",{className:"Legend",children:[Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!1,isFinish:!1,actualValue:0})," "," = Empty Square"]}),Object(r.jsxs)("div",{className:"Legend-item",children:[Object(r.jsx)(f,{isStart:!1,isFinish:!0})," "," = Wrong Value Square"]})]});default:return Object(r.jsx)("div",{})}}function an(n){return Object(r.jsxs)("div",{className:"ErrorLegend",children:[2===n.selectedAlg||3===n.selectedAlg||4===n.selectedAlg?4===n.selectedAlg?Object(r.jsxs)("div",{className:"Error",id:"Error",children:["Generation: 0 ",Object(r.jsx)("br",{}),"Error: 0"]}):Object(r.jsx)("div",{className:"Error",id:"Error",children:"Error: 0"}):Object(r.jsx)("div",{className:"backtrackHasSolution",id:"Error"}),Object(r.jsx)(on,{selectedAlg:n.selectedAlg})]})}var sn=function(n){Object(h.a)(t,n);var e=Object(d.a)(t);function t(n){var r;return Object(c.a)(this,t),(r=e.call(this,n)).state={grid:[],selectedAlg:0},r.visualizeAlgorithm=rn.bind(Object(u.a)(r)),r.selectAlg=S.bind(Object(u.a)(r)),r.inputValueChange=r.inputValueChange.bind(Object(u.a)(r)),r.changeNodeVal=r.changeNodeVal.bind(Object(u.a)(r)),r}return Object(l.a)(t,[{key:"changeNodeVal",value:function(n,e,t){var r=this.state.grid.slice();r[n][e]=t,this.setState({grid:r})}},{key:"inputValueChange",value:function(n,e,t){var r=t.target.value,o=Number(r);if(o>=0&&o<=9){var a=this.state.grid.slice();a[n][e]=o,this.setState({grid:a})}}},{key:"componentDidMount",value:function(){this.setState({grid:[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]]})}},{key:"render",value:function(){var n=this;return Object(r.jsxs)("div",{className:"App",children:[Object(r.jsx)("h1",{className:"Header",children:"Algorithm Visualizer"}),Object(r.jsx)(j,{selectAlg:this.selectAlg,handleClick:function(){return n.visualizeAlgorithm(n.changeNodeVal)},loadSGrid:function(){n.setState({grid:p()},(function(){return g(n.state.grid)}))},loadRGrid:function(){n.setState({grid:w()},(function(){return g(n.state.grid)}))}}),Object(r.jsxs)("div",{className:"flexbox",children:[Object(r.jsx)(G,{selectedAlg:this.state.selectedAlg}),Object(r.jsx)(b,{inputValueChange:this.inputValueChange,grid:this.state.grid}),Object(r.jsx)(an,{selectedAlg:this.state.selectedAlg})]}),Object(r.jsx)("h3",{children:"p.s. I love you :heart:"})]})}}]),t}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(Object(r.jsx)(a.a.StrictMode,{children:Object(r.jsx)(sn,{})}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(n){n.unregister()})).catch((function(n){console.error(n.message)}))}],[[22,1,2]]]);
//# sourceMappingURL=main.a86e5409.chunk.js.map